In this project, I developed a Content-Based Movie Recommendation System using Python and machine learning libraries like Pandas, NLTK, and Scikit-learn. I started by importing and merging two datasets — movies.csv and credits.csv — on the common column title, resulting in a combined dataset with 4809 rows and 23 columns. I performed data cleaning by checking for and handling null values and duplicate entries to ensure data quality. From the merged data, I focused on the most relevant columns: genres, keywords, overview, cast, and crew. To extract meaningful content, I parsed these columns using ast.literal_eval() and selected the top 3 cast members and the director from the crew column. All these text-based features were then combined into a new column called tags to represent each movie's content.

To prepare the tags for modeling, I cleaned and preprocessed the text by removing spaces in multi-word phrases, converting everything to lowercase, and applying stemming using NLTK’s PorterStemmer to reduce similar words to their root forms. Then, I used CountVectorizer from Scikit-learn to transform the text into a vector of top 5000 keywords, excluding stop words. After this, I computed the cosine similarity between movies based on their vectorized tags, which allowed me to build a recommend() function. This function takes a movie title as input, identifies its index, and returns the top 5 most similar movies by sorting similarity scores (excluding the input movie itself). The recommendation system works entirely on movie content and does not rely on user ratings or collaborative filtering.

